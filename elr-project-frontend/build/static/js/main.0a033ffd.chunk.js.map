{"version":3,"sources":["components/pages/contact.js","components/header/header.js","components/pages/homepage.js","App.js","components/pages/register.js","components/pages/deregister.js","components/pages/renew.js","components/pages/404.js","components/pages/thankyou.js","components/pages/renewDone.js","components/pages/deregDone.js","reportWebVitals.js","index.js"],"names":["element","Component","ReactDOM","render","document","getElementById","App","className","style","marginTop","htmlFor","type","name","id","placeholder","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"uQAKMA,GCAeC,YCFEA,YFEP,+CAChBC,IAASC,OAAOH,EAASI,SAASC,eAAe,SAE3BJ,Y,YGuBhBK,GC7BiBL,YCAEA,YCALA,YCADA,YCAIA,YCACA,YCAAA,Y,kKP8BtB,WACE,OACE,qBAAKM,UAAU,YAAf,SACA,sBAAMC,MAAO,CAACC,UAAW,IAAzB,SACE,sBAAKF,UAAU,aAAf,UACE,uBAAOG,QAAQ,YAAf,mBACA,qBAAKH,UAAU,WAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,uBAAOI,KAAK,QAAQC,KAAK,aAAaC,GAAG,aAAaC,YAAY,cAChEP,UAAU,qBAIhB,uBAAOG,QAAQ,cAAf,2BACA,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAOI,KAAK,SAASC,KAAK,cAAcC,GAAG,cACzCC,YAAY,sBAAsBP,UAAU,iBAG9C,uBAAOM,GAAG,aAAaN,UAAU,uBAAjC,6IAKF,qBAAKA,UAAU,sBAAf,SACE,uBAAOI,KAAK,SAASJ,UAAU,kBAAiBQ,MAAM,mBAK1D,uBAAOL,QAAQ,YAAf,+BACA,qBAAKH,UAAU,WAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,uBAAOI,KAAK,OAAOC,KAAK,YAAYC,GAAG,YAAYC,YAAY,aAC7DP,UAAU,qBAIhB,uBAAOI,KAAK,SAASJ,UAAU,kBAAiBQ,MAAM,sB,GAxC9Cd,cAgDHK,IAEd,IAGA,IACE,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IQ9FH,IAYeU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdf,IAASC,OACP,cAAC,IAAMsB,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,SAM1BW,M","file":"static/js/main.0a033ffd.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n//testing\nimport ReactDOM from 'react-dom';\n<div id=\"root\"></div>\nconst element = <h1>Hello, world</h1>;\nReactDOM.render(element, document.getElementById('root'));\n\nclass Contact extends Component {//display-4, jumbotron\n  render() {\n    return (\n      <div className=\"container\">\n        typing something\n        <div className=\"container\">\n          <h1 className=\"container\">About / Contact</h1> \n          <p>Lockers system maintainer: <a href=\"mailto:\">J</a></p>\n          <p>ESS Director of IT: <a href=\"mailto:ca\">D</a></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","/* global window */\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n    };\n\n    this.updateWindowSize = this.updateWindowSize.bind(this);\n  }\n\n  updateWindowSize() {\n    this.setState({ width: window.innerWidth });\n  }\n\n  componentDidMount() {\n    this.updateWindowSize();\n    window.addEventListener('resize', this.updateWindowSize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowSize);\n  }\n\n  getHeaderText() {\n    return (this.state.width < 600)\n      ? 'UVic - ESS'\n      : 'University of Victoria - Engineering Student Society';\n  }\n\n  render() {\n    return (\n      <header>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\n            <a className=\"navbar-brand\" href=\"http://ess.uvic.ca\">\n              {this.getHeaderText()}\n            </a>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to=\"/\" className=\"nav-link\">Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"contact\" className=\"nav-link\">About/Contact</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Homepage extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"jumbotron\">\n            <h1 className=\"display-4\">ESS Locker Registration</h1>\n            <h5 className=\"display-5\">\n              <b>\n                Before registering please read the following information:\n              </b>\n            </h5>\n            <p style={{marginTop: 30}}>\n              This is the locker registration page for the lockers in the ELW.\n              The Engineering Students Society controls the registration of lockers\n              in the Engineering Lab Wing (ELW) only.\n              <b> The lockers are registered on a first come first serve basis.</b>\n            </p>\n            <p style={{marginTop: 30}}>\n              If you register a locker, you may keep it until the first week of\n              the next term. After that time, please remove your lock or inform\n              us that you will be continuing to use your locker.\n            </p>\n            <p style={{marginTop: 30}}>\n              These lockers are free, but <b>please</b> don&#39;t register for a\n              locker unless you really think you are going to use it. There are\n              far less lockers than students. You do not need to be in the faculty\n              of Engineering to use a locker.\n            </p>\n            <p style={{marginTop: 30, marginBottom: 35}}>\n              Before you register a locker, you need to <b>physically\n              make sure the one you want is open.</b> Then <b>you have\n              to put a lock on it.</b> If you don&#39;t, and the rest\n              of the lockers have been registered, we will delete your\n              registration and give the locker to someone more deserving.\n            </p>\n            <Link to=\"register\">\n              <button className=\"btn btn-primary btn-lg\">\n                I&#39;m ready to register\n              </button>\n            </Link>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"jumbotron\">\n            <h4 className=\"display-5\" style={{marginBottom: 20}}>\n              Renew existing locker reservation\n            </h4>\n            <p>\n              Renew existing locker registrations here. To prevent abandoned / forgotten lockers,\n              reservations will automatically be removed at the beginning of each new term unless\n              they are renewed.\n            </p>\n            <Link to=\"renew\">\n              <button className=\"btn btn-primary btn-lg\">\n                Renew my locker\n              </button>\n            </Link>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"jumbotron\">\n            <h4 className=\"display-5\" style={{marginBottom: 20}}>\n              Update / remove existing registration\n            </h4>\n            <p>\n              Deregister your locker here. Your locker reservation will automatically be removed\n              at the beginning of each new term unless you renew it.\n            </p>\n            <Link to=\"deregister\">\n              <button className=\"btn btn-primary btn-lg\">\n                Deregister a locker\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Homepage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; //testing\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from 'react-router-dom';\n//HashRouter as Router\n\nimport Header from './components/header/header.js';\nimport Homepage from './components/pages/homepage.js';\nimport Contact from './components/pages/contact.js';\nimport Register from './components/pages/register.js';\nimport Deregister from './components/pages/deregister.js';\nimport Renew from './components/pages/renew.js';\nimport Lost from './components/pages/404.js';\nimport ThankYou from './components/pages/thankyou.js';\nimport RenewDone from './components/pages/renewDone.js';\nimport DeregDone from './components/pages/deregDone.js';\n\nimport './assets/css/custom.min.css';\n\nexport const NavBar = () => {\n  return (\n      <nav>\n        <Link to=\"/\"> Home </Link>\n        <Link to=\"/contact\"> Contact </Link>\n      </nav>\n  );\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n      <form style={{marginTop: 30}}>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputCode\">Email</label>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n              <input type=\"email\" name=\"emailValue\" id=\"inputEmail\" placeholder=\"Enter email\"\n                className=\"form-control\" \n              />\n            </div>\n          </div>\n          <label htmlFor=\"inputNumber\">Locker number</label>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-4\">\n              <input type=\"number\" name=\"numberValue\" id=\"inputNumber\"\n                placeholder=\"Enter locker number\" className=\"form-control\"\n                \n              />\n              <small id=\"numberHelp\" className=\"form-text text-muted\">\n                Enter the locker number you wish to deregister.\n                A confirmation email will be sent to the address associated with the locker.  \n              </small>\n            </div>\n            <div className=\"form-group col-md-2\">\n              <input type=\"button\" className=\"btn btn-primary\"value=\"Send code\"\n                \n              />\n            </div>\n          </div>\n          <label htmlFor=\"inputCode\">Confirmation code</label>\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-2\">\n              <input type=\"text\" name=\"codeValue\" id=\"inputCode\" placeholder=\"Enter code\"\n                className=\"form-control\" \n              />\n            </div>\n          </div>\n          <input type=\"submit\" className=\"btn btn-primary\"value=\"Submit\" />\n        </div>\n      </form>\n    </div>\n    );\n  }\n}\n\nexport default App;\n\n<BrowserRouter>\n<div className=\"App\">\n<Header />\n<Routes>\n  <Link to=\"/Contact\"> Contact </Link>\n  <Route exact path='/' component={Homepage} />\n  <Route path='/contact' component={Contact} />\n  <Route exact path='/register' component={Register} />\n  <Route path='/register/thankyou' component={ThankYou} />\n  <Route exact path='/deregister' component={Deregister} />\n  <Route path='/deregister/thankyou' component={DeregDone} />\n  <Route exact path='/renew' component={Renew} />\n  <Route path='/renew/thankyou' component={RenewDone} />\n  <Route component={Lost} />\n</Routes>\n</div>\n</BrowserRouter>\n","import React, { Component } from 'react';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameValue: '',\n      emailValue: '',\n      lockerValue: '',\n      lockerOpt: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getLockerOpts() {\n    // Fetch the available locker numbers from the API\n    fetch('/lockersapi/available', {\n      method: 'get',\n      mode: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => {\n        // If the request succeded, parse the JSON data.\n        // Otherwise show an empty list\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          console.log('Lockers req failed (Code ' + res.status + ')');\n          return [];\n        }\n      })\n      .then(json => this.setState({ lockerOpt: json }));\n  }\n\n  componentWillMount() {\n    this.getLockerOpts();\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    // Send a request to the API to create a new locker\n    fetch('/lockersapi/new', {\n      method: 'post',\n      mode: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: this.state.nameValue,\n        email: this.state.emailValue,\n        locker: this.state.lockerValue,\n      }),\n    })\n      .then(res => {\n        // If the request succeeded, show the thank you page.\n        // Otherwise show the error\n        if (res.status === 200) {\n          this.props.history.push('/register/thankyou');\n        } else if (res.status >= 500) {\n          alert(\n            'An internal server error occurred, please try again later or contact the maintanter.'\n          );\n        } else {\n          res.text().then(text => alert(text));\n        }\n      });\n\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <form method=\"post\" onSubmit={this.handleSubmit} style={{ marginTop: 30 }}>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputName\">Name</label>\n            <input type=\"text\" name=\"nameValue\" placeholder=\"Enter name\" className=\"form-control\"\n              value={this.state.nameValue} onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputEmail\">Email address</label>\n            <input type=\"email\" name=\"emailValue\" id=\"inputEmail\" placeholder=\"Enter email\"\n              className=\"form-control\" value={this.state.emailValue} onChange={this.handleChange}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              Your email will not be shared with anyone else. We will send you messages\n              regarding the status of your reservation.\n            </small>\n          </div>\n          <div className=\"form-group\" style={{ maxWidth: '40%' }}>\n            <label htmlFor=\"lockerDrop\">Choose your locker</label>\n            <select id=\"lockerDrop\" className=\"form-control\" name=\"lockerValue\"\n              value={this.state.lockerValue} onChange={this.handleChange}>\n              {this.state.lockerOpt.map(value => {\n                return <option key={value.number}>{value.number}</option>;\n              })}\n              <option value=\"\" disabled>Select locker</option>\n            </select>\n          </div>\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\n\nclass Deregister extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberValue: '',\n      codeValue: '',\n      emailValue: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCode   = this.handleCode.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    // Send the code to the API and have it delete the locker\n    // if the code is correct\n    fetch('/lockersapi/deregister/confirm', {\n      method: 'delete',\n      mode: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        code: this.state.codeValue,\n      }),\n    })\n      .then(res => {\n        // If the request was successful, redirect to thank you page,\n        // otherwise show what the error was\n        if (res.status === 200) {\n          this.props.history.push('/deregister/thankyou');\n        } else if (res.status >= 500) {\n          alert(\n            'An internal server error occurred, please try again later or contact the maintaner.'\n          );\n        } else {\n          res.text().then(text => alert(text));\n        }\n      });\n\n    event.preventDefault();\n  }\n\n  handleCode(event) {\n    // Send an API request to have a locker reset code genereated\n    // and emailed to the user\n    fetch('/lockersapi/deregister/code', {\n      method: 'post',\n      mode: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        number: this.state.numberValue,\n        email: this.state.emailValue,\n      }),\n    })\n      .then(res => {\n        // If the request succeeded, let the user know\n        if (res.status >= 500) {\n          alert(\n            'An internal server error occurred, please try again later or contact the maintaner.'\n          );\n        } else {\n          res.text().then(text => alert(text));\n        }\n      });\n\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} style={{marginTop: 30}}>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputCode\">Email</label>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <input type=\"email\" name=\"emailValue\" id=\"inputEmail\" placeholder=\"Enter email\"\n                  className=\"form-control\" value={this.state.emailValue} onChange={this.handleChange}\n                />\n              </div>\n            </div>\n            <label htmlFor=\"inputNumber\">Locker number</label>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-4\">\n                <input type=\"number\" name=\"numberValue\" id=\"inputNumber\"\n                  placeholder=\"Enter locker number\" className=\"form-control\"\n                  value={this.state.numberValue} onChange={this.handleChange}\n                />\n                <small id=\"numberHelp\" className=\"form-text text-muted\">\n                  Enter the locker number you wish to deregister.\n                  A confirmation email will be sent to the address associated with the locker.\n                </small>\n              </div>\n              <div className=\"form-group col-md-2\">\n                <input type=\"button\" className=\"btn btn-primary\"value=\"Send code\"\n                  onClick={this.handleCode}\n                />\n              </div>\n            </div>\n            <label htmlFor=\"inputCode\">Confirmation code</label>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-2\">\n                <input type=\"text\" name=\"codeValue\" id=\"inputCode\" placeholder=\"Enter code\"\n                  className=\"form-control\" value={this.state.codeValue} onChange={this.handleChange}\n                />\n              </div>\n            </div>\n            <input type=\"submit\" className=\"btn btn-primary\"value=\"Submit\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Deregister;\n","import React, { Component } from 'react';\n\nclass Renew extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailValue: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    // Send a request to the API to renew the locker\n    fetch('/lockersapi/renew', {\n      method: 'post',\n      mode: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: this.state.emailValue,\n      }),\n    })\n      .then(res => {\n        // If the request succeded, show the thank you page.\n        // Otherwise show the error\n        if (res.status === 200) {\n          this.props.history.push('/renew/thankyou');\n        } else if (res.status >= 500) {\n          alert(\n            'An internal server error occurred, please try again later or contact the maintanter.'\n          );\n        } else {\n          res.text().then(text => alert(text));\n        }\n      });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} style={{marginTop: 30}}>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputEmail\">Email address</label>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-8\">\n                <input type=\"email\" name=\"emailValue\" id=\"inputEmail\" placeholder=\"Enter email\"\n                  className=\"form-control\" value={this.state.emailValue} onChange={this.handleChange}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                  Enter the same email address you used to reserve your locker.\n                </small>\n              </div>\n              <div className=\"form-group col-md-2\">\n                <input type=\"submit\" className=\"btn btn-primary\"value=\"Renew\" />\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Renew;\n","import React, { Component } from 'react';\n\nclass Lost extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          <h1 className=\"display-3\">404</h1>\n          <h4 className=\"display-5\">Page not found</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lost;\n","import React, { Component } from 'react';\n\nclass ThankYou extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4\">Thank you!</h1>\n          <p>Thank you for registering a locker with the ESS!</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThankYou;\n","import React, { Component } from 'react';\n\nclass RenewDone extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4\">Success</h1>\n          <p>Thank you for renewing your locker</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RenewDone;\n","import React, { Component } from 'react';\n\nclass DeregDone extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4\">Success</h1>\n          <p>Your locker reservation has been removed. Thank you for using our service</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeregDone;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}